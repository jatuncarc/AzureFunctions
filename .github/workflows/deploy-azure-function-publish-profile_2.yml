name: Build, Test & Deploy
on: 
  push
  # [workflow_dispatch]

env:
  AZURE_FUNCTIONAPP_NAME: 'functionsdemoapps'   # set this to your function app name on Azure
  # AZURE_FUNCTIONAPP_NAME: 'functionsdemoappsLinux'  
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './HelloWord/dotnet'       # set this to the path to your function app project, defaults to the repository root
 # DOTNET_VERSION: '6.0.x'
  xAZURE_SUBSCRIPTION_ID: 'c8eb5574-f147-4230-978a-06596636cfee'
  RESOURCE_GROUP_NAME: 'MyApps'

jobs:
  deploy-with-publish-profile:
    name: 'FunctionApp Build, Test & Deploy'
    runs-on: windows-latest
    # runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Login via Az Module
      uses: azure/login@v1
      with:
         creds: ${{secrets.AZURE_CREDENTIALS}}
         enable-AzPSSession: true

    # - name: Instalar dependencias
    #   shell: pwsh
    #   run: |
    #       Set-PSRepository PSGallery -InstallationPolicy Trusted
    #       Install-Module Az.Websites, Az.Accounts

    # - name: Get publish Profile
    #   id: fncappx
    #   shell: pwsh
    #   run: |
    #     $profile = Get-AzWebAppPublishingProfile `
    #         -ResourceGroupName ${{ env.RESOURCE_GROUP_NAME }} `
    #         -Name ${{ env.AZURE_FUNCTIONAPP_NAME }}
    #     $profile = $profile.Replace("`r", "").Replace("`n", "")
    #     Write-Output "::set-output name=profile::$profile"

    # - name: Get WebApp/FunctionApp publish profile
    #   id: fncapp
    #   uses: aliencube/publish-profile-actions@v1
    #   env:
    #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    #   with:
    #     resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
    #     appName: ${{ env.AZURE_FUNCTIONAPP_NAME }}    
              
    # - name: Show publish profile
    #   shell: pwsh
    #   run: |
    #         echo ${{ steps.fncapp.outputs.profile }}

    # - name: Deploy FunctionApp
    #   uses: Azure/functions-action@v1
    #   with:
    #     app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
    #     package: published
    #     publish-profile: ${{ steps.fncapp.outputs.profile }}

    # - name: Reset publish Profile
    #   shell: pwsh
    #   run: |
    #     $profile = Reset-AzWebAppPublishingProfile `
    #         -ResourceGroupName ${{ env.RESOURCE_GROUP_NAME }} `
    #         -Name ${{ env.AZURE_FUNCTIONAPP_NAME }}
    #     $profile = ""

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh # For Linux, use bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: Download Azure Function app publishing profile
      id: az_funcapp_publishing_profile
      run: |
        echo "FUNCTION_APP_PUB_PROFILE=$(az functionapp deployment list-publishing-profiles --subscription 'c8eb5574-f147-4230-978a-06596636cfee' --resource-group 'MyApps' --name 'functionsdemoapps' --xml)" >> $GITHUB_ENV    
        # echo ${{ env.FUNCTION_APP_PUB_PROFILE }}
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        FUNCTION_APP_RESOURCE_GROUP: 'MyApps'
        FUNCTION_APP_NAME: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        FUNCTION_APP_SLOT_NAME: ${{ env.AZURE_FUNCTIONAPP_NAME }}

    - name: Deploy Azure Functions app
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        # package: './HelloWord/dotnet'
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ env.FUNCTION_APP_PUB_PROFILE }}
        respect-funcignore: true