# La autenticación a Azure se puede realizar con RBAC o con el publish profile para el deploy.

name: Despliegue con publis profile manual
on:
  [workflow_dispatch]
  # push:
  #   branches: ["master"]

env:
  AZURE_FUNCTIONAPP_NAME: "functionsdemoapps" # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "./HelloWord/dotnet" # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: "6.0.x" # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
  build-and-deploy:
    runs-on: windows-latest # For Linux, use ubuntu-latest
    environment: dev
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      # Logueo a Azure mediante RBAC. Si se utiliza el publish profile de la última linea, este step se puede comentar
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Instalacion DotNet
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: pwsh # For Linux, use bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
          # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Comentar si se utiliza RBAC.
